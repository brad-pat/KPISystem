package com.brad.project.GUI;

import com.brad.project.ConnectionHandler;
import com.brad.project.KPIHandler;
import com.brad.project.Storage;
import com.brad.project.objects.KPI;
import com.brad.project.objects.Sale;
import com.brad.project.objects.SubKPI;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author brad
 */
public class ProcessSaleScreen extends javax.swing.JFrame {

    /**
     * Creates new form ProcessSaleScreen
     */
    public ProcessSaleScreen() {
        setVisible(true);
        initComponents();
        this.showReview(false);
        KPIDropDown.setModel(getKPIComboModel());
        KPI kpiholder = KPIHandler.getInstance().kpi_list.get(0);
        SubKPIDropDown.setModel(getSubKPIComboModel(kpiholder));
        skpi_temp = KPIHandler.getInstance().getSubKPINamesAsList(kpiholder);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TitleTxt = new javax.swing.JLabel();
        KPITxt = new javax.swing.JLabel();
        KPIDropDown = new javax.swing.JComboBox<>();
        SUBKPIText = new javax.swing.JLabel();
        SubKPIDropDown = new javax.swing.JComboBox<>();
        DataText = new javax.swing.JLabel();
        Data = new javax.swing.JTextField();
        AddButton = new javax.swing.JButton();
        ReviewText = new javax.swing.JLabel();
        ReviewDropDown = new javax.swing.JComboBox<>();
        ReviewKPI = new javax.swing.JLabel();
        ReviewSubKPI = new javax.swing.JLabel();
        ReviewData = new javax.swing.JLabel();
        ReviewRemoveButton = new javax.swing.JButton();
        SubmitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TitleTxt.setFont(new java.awt.Font("Lucida Grande", 0, 48)); // NOI18N
        TitleTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleTxt.setText("Process Sale");

        KPITxt.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        KPITxt.setText("KPI:");

        KPIDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        KPIDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KPIDropDownActionPerformed(evt);
            }
        });

        SUBKPIText.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        SUBKPIText.setText("Sub-KPI:");

        SubKPIDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        SubKPIDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubKPIDropDownActionPerformed(evt);
            }
        });

        DataText.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        DataText.setText("Data to Submit (TYPE):");

        Data.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        Data.setText("Data goes here...");

        AddButton.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        AddButton.setText("Add..");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        ReviewText.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        ReviewText.setText("Review Sale:");

        ReviewDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ReviewDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReviewDropDownActionPerformed(evt);
            }
        });

        ReviewKPI.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        ReviewKPI.setText("KPI");

        ReviewSubKPI.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        ReviewSubKPI.setText("Sub KPI");

        ReviewData.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        ReviewData.setText("Data");

        ReviewRemoveButton.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        ReviewRemoveButton.setText("Remove..");
        ReviewRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReviewRemoveButtonActionPerformed(evt);
            }
        });

        SubmitButton.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        SubmitButton.setText("Submit Sale(s)");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(KPIDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ReviewDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TitleTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 1012, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Data, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(SubKPIDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(DataText, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ReviewText, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(90, 90, 90)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ReviewRemoveButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ReviewData, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ReviewSubKPI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(KPITxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(554, 554, 554))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SUBKPIText, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)
                                .addComponent(ReviewKPI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)
                                .addComponent(SubmitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KPITxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReviewText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KPIDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReviewDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SUBKPIText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReviewKPI, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SubKPIDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReviewSubKPI, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DataText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReviewData, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Data, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReviewRemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(130, 130, 130)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(190, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void KPIDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KPIDropDownActionPerformed
        // TODO add your handling code here:
        int index = KPIDropDown.getSelectedIndex();
        String kpiname = kpis.get(index);
        KPI kpi = KPIHandler.getInstance().getKPIByName(kpiname);
        skpi_temp = KPIHandler.getInstance().getSubKPINamesAsList(kpi);
        SubKPIDropDown.setModel(getSubKPIComboModel(kpi));
        SubKPI skpi = KPIHandler.getInstance().getSubKPIByNameAndKPI(skpi_temp.get(0), kpi);
        DataText.setText("Data to Submit (" + skpi.getType() + "):");
    }//GEN-LAST:event_KPIDropDownActionPerformed

    List<String> skpi_temp;

    private void SubKPIDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubKPIDropDownActionPerformed
        // TODO add your handling code here:
        //KPI
        int index = KPIDropDown.getSelectedIndex();
        String kpiname = kpis.get(index);
        KPI kpi = KPIHandler.getInstance().getKPIByName(kpiname);
        //SubKPI
        int sindex = SubKPIDropDown.getSelectedIndex();
        String skpiname = skpi_temp.get(sindex);
        SubKPI skpi = KPIHandler.getInstance().getSubKPIByNameAndKPI(skpiname, kpi);
        DataText.setText("Data to Submit (" + skpi.getType() + "):");
    }//GEN-LAST:event_SubKPIDropDownActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        // TODO add your handling code here:
        KPI kpi = KPIHandler.getInstance().getKPIByName(kpis.get(KPIDropDown.getSelectedIndex()));
        SubKPI skpi = KPIHandler.getInstance().getSubKPIByNameAndKPI(skpi_temp.get(SubKPIDropDown.getSelectedIndex()), kpi);
        try {
            double numberdata = Double.parseDouble(Data.getText());
            Sale sale = new Sale(sales.size()+1, kpi, skpi, numberdata);
            sales.add(sale);
            showReview(true);
            ReviewDropDown.setModel(getToSubmitData());
            setReviewData(sales.size()-1);
        }
        catch(NumberFormatException e) {
            System.out.println("Test");
        }
    }//GEN-LAST:event_AddButtonActionPerformed

    private void ReviewDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReviewDropDownActionPerformed
        // TODO add your handling code here:
        int index = ReviewDropDown.getSelectedIndex();
        setReviewData(index);
    }//GEN-LAST:event_ReviewDropDownActionPerformed

    private void ReviewRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReviewRemoveButtonActionPerformed
        // TODO add your handling code here:
        int index = ReviewDropDown.getSelectedIndex();
        sales.remove(index);
        for(int i = 0; i<sales.size(); i++) {
            Sale s = sales.get(i);
            s.setSid(i+1);
        }
        ReviewDropDown.setModel(getToSubmitData());
        setReviewData(0);
    }//GEN-LAST:event_ReviewRemoveButtonActionPerformed

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        //Sales = Sale List
        ConnectionHandler ch = new ConnectionHandler();
        String current_user = Storage.getInstance().current_user_id;
        for(Sale s : sales) {
            String kpi_name = s.getKkpi().getName();
            String subkpi_name = s.getSubkpi().getName();
            double data = s.getSaledata();
            ch.submitSale(kpi_name, subkpi_name, data, current_user);
        }
        this.dispose();
        new HomeScreen();
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void setReviewData(int index) {
        Sale s = sales.get(index);
        this.ReviewKPI.setText(s.getKkpi().getName());
        this.ReviewSubKPI.setText(s.getSubkpi().getName());
        this.ReviewData.setText(s.getSaledata() + "");
        this.ReviewDropDown.setSelectedIndex(index);
    }

    private void showReview(boolean show) {
        this.ReviewText.setVisible(show);
        this.ReviewDropDown.setVisible(show);
        this.ReviewKPI.setVisible(show);
        this.ReviewSubKPI.setVisible(show);
        this.ReviewData.setVisible(show);
        this.ReviewRemoveButton.setVisible(show);
    }

    List<String> kpis = KPIHandler.getInstance().getKPINamesAsList();
    
    List<Sale> sales = new ArrayList<Sale>();
    
    private ComboBoxModel getToSubmitData() {
        List<String> temp = new ArrayList<String>();
        //SALEID
        for(Sale s : sales) {
            int id = s.getSid();
            String show = id + ": " + s.getKkpi().getName() + " - " + s.getSubkpi().getName() + " - " + s.getSaledata();
            temp.add(show);
        }
        String[] items = temp.toArray(new String[0]);
        return new DefaultComboBoxModel(items);
    } 

    private ComboBoxModel getKPIComboModel() {
        String[] items = kpis.toArray(new String[0]);
        return new DefaultComboBoxModel(items);
    }

    private ComboBoxModel getSubKPIComboModel(KPI kpi) {
        List<String> skpis = KPIHandler.getInstance().getSubKPINamesAsList(kpi);
        String[] items = skpis.toArray(new String[0]);
        return new DefaultComboBoxModel(items);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JTextField Data;
    private javax.swing.JLabel DataText;
    private javax.swing.JComboBox<String> KPIDropDown;
    private javax.swing.JLabel KPITxt;
    private javax.swing.JLabel ReviewData;
    private javax.swing.JComboBox<String> ReviewDropDown;
    private javax.swing.JLabel ReviewKPI;
    private javax.swing.JButton ReviewRemoveButton;
    private javax.swing.JLabel ReviewSubKPI;
    private javax.swing.JLabel ReviewText;
    private javax.swing.JLabel SUBKPIText;
    private javax.swing.JComboBox<String> SubKPIDropDown;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JLabel TitleTxt;
    // End of variables declaration//GEN-END:variables
}
