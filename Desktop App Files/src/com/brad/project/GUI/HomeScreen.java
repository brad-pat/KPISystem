/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.brad.project.GUI;

import com.brad.project.ConnectionHandler;
import com.brad.project.GUI.setup.GeneralSettings;
import com.brad.project.GUI.setup.KPIForm;
import com.brad.project.GUI.setup.Users;
import com.brad.project.KPIHandler;
import com.brad.project.Storage;
import com.brad.project.UserHandler;
import com.brad.project.objects.KPI;
import com.brad.project.objects.SubKPI;
import com.brad.project.objects.User;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author brad
 */
public class HomeScreen extends javax.swing.JFrame {

    /**
     * Creates new form HomeScreen
     */
    public HomeScreen() {
        this.setVisible(true);
        initComponents();
        setup_system();
        print_system();
    }

    private void setup_system() {
        ConnectionHandler ch = new ConnectionHandler();
        String setup_string = ch.getSettings().split("=")[1].trim();
        //System.out.println(setup_string);
        String users = setup_string.split("QQQ")[0];
        //System.out.println(users);
        String kpis = setup_string.split("QQQ")[1];
        //System.out.println(kpis);
        String store_times = setup_string.split("QQQ")[2];
        //System.out.println(store_times);
        String employee_times = setup_string.split("QQQ")[3];
        //System.out.println(employee_times);
        handle_users(users);
        handle_kpi(kpis);
        handle_stores_settings(store_times);
        handle_employee_settings(employee_times);
    }
    
    public void print_system() {
        KPIHandler.getInstance().printKPIs();
        UserHandler.getInstance().printUsers();
        Storage.getInstance().printEmployeeTrackTimings();
        Storage.getInstance().printStoreTrackTimings();
    }
    
    private void handle_kpi(String kpi_string) {
        List<KPI> kpi_list = KPIHandler.getInstance().kpi_list;
        kpi_list.clear();
        String[] kpis = kpi_string.split("\\?\\?\\?");
        for (String s : kpis) {
            String name = s.split("XX")[0];
            int value = Integer.parseInt(s.split("XX")[1]);
            String type = s.split("XX")[2];
            String[] sub_kpis = s.split("XX")[3].split("!!!");
            ArrayList<SubKPI> subkpis = new ArrayList<SubKPI>();
            for (String sk : sub_kpis) {
                String skpi_name = sk.split("ZQZ")[0];
                String skpi_type = sk.split("ZQZ")[1];
                String skpi_math = sk.split("ZQZ")[2];
                boolean skpi_show = Boolean.parseBoolean(sk.split("ZQZ")[3]);
                SubKPI subkpi = new SubKPI(skpi_name, name, skpi_type, skpi_show, skpi_math);
                subkpis.add(subkpi);
            }
            KPI kpi = new KPI(name, value, type, subkpis);
            kpi_list.add(kpi);
        }
    }
    
    private void handle_users(String user) {
        List<User> users = UserHandler.getInstance().users;
        users.clear();
        String[] user_list = user.split("\\?\\?\\?");
        for(String s : user_list) {
            //System.out.println(s);
            String id = s.split("XX")[0];
            String firstname = s.split("XX")[1];
            String lastname = s.split("XX")[2];
            int cont_hours = Integer.parseInt(s.split("XX")[3]);
            int overtime = Integer.parseInt(s.split("XX")[4]);
            String role = s.split("XX")[5];
            boolean manager = Boolean.parseBoolean(s.split("XX")[6]);
            if(UserHandler.getInstance().getUserObjectByID(id) == null) {
                User usr = new User(id, firstname + " " + lastname, role, manager, cont_hours, overtime);
                users.add(usr);
            }
        }
        
    }

    private void handle_stores_settings(String s) {
        ArrayList<String> stores = Storage.getInstance().store_time_scales_to_track;
        stores.clear();
        String[] times = s.split("XX");
        for (String time : times) {
            stores.add(time);
        }
    }

    private void handle_employee_settings(String s) {
        ArrayList<String> stores = Storage.getInstance().individual_time_scales_to_track;
        stores.clear();
        String[] times = s.split("XX");
        for (String time : times) {
            stores.add(time);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        TrackerButton = new javax.swing.JButton();
        TargetsButton = new javax.swing.JButton();
        AdjustKPI = new javax.swing.JButton();
        UserSettings = new javax.swing.JButton();
        GeneralSettings = new javax.swing.JButton();
        ProcessSaleButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TrackerButton.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        TrackerButton.setText("Tracker");
        TrackerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrackerButtonActionPerformed(evt);
            }
        });

        TargetsButton.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        TargetsButton.setText("Targets");
        TargetsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TargetsButtonActionPerformed(evt);
            }
        });

        AdjustKPI.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        AdjustKPI.setText("Adjust KPIs");
        AdjustKPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdjustKPIActionPerformed(evt);
            }
        });

        UserSettings.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        UserSettings.setText("Adjust Users");
        UserSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserSettingsActionPerformed(evt);
            }
        });

        GeneralSettings.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        GeneralSettings.setText("General Settings");
        GeneralSettings.setToolTipText("");
        GeneralSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeneralSettingsActionPerformed(evt);
            }
        });

        ProcessSaleButton.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        ProcessSaleButton.setText("Process Sale");
        ProcessSaleButton.setToolTipText("");
        ProcessSaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessSaleButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Sales Tracker");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AdjustKPI, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProcessSaleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TrackerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TargetsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(UserSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(GeneralSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProcessSaleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TrackerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TargetsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AdjustKPI, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(UserSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(GeneralSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(267, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ProcessSaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessSaleButtonActionPerformed
        // TODO add your handling code here:
        new ProcessSaleScreen();
    }//GEN-LAST:event_ProcessSaleButtonActionPerformed

    private void TrackerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrackerButtonActionPerformed
        // TODO add your handling code here:
        new TrackerScreen();
    }//GEN-LAST:event_TrackerButtonActionPerformed

    private void AdjustKPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdjustKPIActionPerformed
        // TODO add your handling code here:
        new KPIForm();
    }//GEN-LAST:event_AdjustKPIActionPerformed

    private void TargetsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TargetsButtonActionPerformed
        // TODO add your handling code here:
        new TargetsScreen();
    }//GEN-LAST:event_TargetsButtonActionPerformed

    private void UserSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserSettingsActionPerformed
        // TODO add your handling code here:
        new Users(true);
    }//GEN-LAST:event_UserSettingsActionPerformed

    private void GeneralSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeneralSettingsActionPerformed
        // TODO add your handling code here:
        new GeneralSettings();
    }//GEN-LAST:event_GeneralSettingsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdjustKPI;
    private javax.swing.JButton GeneralSettings;
    private javax.swing.JButton ProcessSaleButton;
    private javax.swing.JButton TargetsButton;
    private javax.swing.JButton TrackerButton;
    private javax.swing.JButton UserSettings;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
